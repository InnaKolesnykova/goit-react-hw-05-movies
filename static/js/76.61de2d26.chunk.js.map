{"version":3,"file":"static/js/76.61de2d26.chunk.js","mappings":"kOACA,GAAgB,KAAO,mBAAmB,SAAW,uBAAuB,SAAW,uBAAuB,QAAU,sBAAsB,MAAQ,oBAAoB,YAAc,0BAA0B,IAAM,mB,SCqExN,EAnEa,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACZC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0CL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAM,sCAAAC,OAAyCZ,EAAO,qBAAAY,OAD7C,qCAGfC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKC,MAAMb,GAAQ,KAAD,EAAtB,OAARQ,EAAQE,EAAAI,KAAAJ,EAAAE,KAAA,EACKJ,EAASO,OAAO,KAAD,GAA5BN,EAAIC,EAAAI,MAEDpB,KACLC,EAAQc,EAAKf,MAEbsB,QAAQC,MAAM,sBAAuBR,GACxCC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEDM,QAAQC,MAAM,gCAA+BP,EAAAQ,IAAS,yBAAAR,EAAAS,OAAA,GAAAZ,EAAA,mBAE7D,kBAbsB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAcvBlB,GACJ,GAAG,CAACH,EAAQX,IAMZ,OACIiC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,KAAYC,SAC3B/B,EAAKgC,OAAS,GACXC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACAH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,SAAgBC,SAC1B/B,EAAKmC,MAAM,EAAG/B,GAAegC,KAAI,SAACC,GAAU,OAC7CJ,EAAAA,EAAAA,MAAA,MAAIJ,UAAWC,EAAAA,SAAgBC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,YAAmBC,SAClCM,EAAWC,cACRV,EAAAA,EAAAA,KAAA,OACAC,UAAWC,EAAAA,MACXS,IAAG,kCAAAhC,OAAoC8B,EAAWC,cAClDE,IAAKH,EAAWI,QAGhBb,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAeC,SAAC,gBAIpCE,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAAA,QAAeC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KAAAG,SAAA,GAAAxB,OAAO8B,EAAWI,SAClBR,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,cAAW,GAAAxB,OAAI8B,EAAWK,mBAfIL,EAAWM,GAiB3C,MAGR3C,EAAKgC,OAAS5B,IACXwB,EAAAA,EAAAA,KAAA,UAAQgB,QA/BG,WACnBvC,GAAiB,SAAAwC,GAAiB,OAAIA,EAAoB,CAAC,GAC/D,EA6B6ChB,UAAWC,EAAAA,IAAWC,SAAC,kBAM5DH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,2DAIX,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__1Tp-0\",\"castList\":\"Cast_castList__a7IuT\",\"castCard\":\"Cast_castCard__dQ0VV\",\"infobox\":\"Cast_infobox__jraiM\",\"image\":\"Cast_image__n4lmp\",\"placeholder\":\"Cast_placeholder__l4Fy0\",\"btn\":\"Cast_btn__1Pfyo\"};","import React, { useState, useEffect } from \"react\";\r\nimport styles from './Cast.module.css';\r\n\r\nconst Cast = ({ movieId }) => {\r\n    const [cast, setCast] = useState([]);\r\n    const [visibleActors, setVisibleActors] = useState(8);\r\n    const apiKey = '6ec0ba8fa041ffdfd513a6b00a854a64';\r\n    const apiUrl = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`;\r\n\r\n    useEffect(() => {\r\n        const fetchMovieCredits = async () => {\r\n            try {\r\n                const response = await fetch(apiUrl);\r\n                const data = await response.json();\r\n\r\n                if (data.cast) {\r\n                    setCast(data.cast);\r\n                } else {\r\n                    console.error('No cast data found:', data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching movie credits:', error);\r\n            }\r\n        };\r\n        fetchMovieCredits();\r\n    }, [apiUrl, movieId]);\r\n\r\n    const loadMoreActors = () => {\r\n        setVisibleActors(prevVisibleActors => prevVisibleActors + 8);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.cast}>\r\n        {cast.length > 0 ? (\r\n            <>\r\n            <ul className={styles.castList}>\r\n                {cast.slice(0, visibleActors).map((castMember) => (\r\n                <li className={styles.castCard} key={castMember.id}>\r\n                    <div className={styles.placeholder}>\r\n                    {castMember.profile_path ? (\r\n                        <img\r\n                        className={styles.image}\r\n                        src={`https://image.tmdb.org/t/p/w500${castMember.profile_path}`}\r\n                        alt={castMember.name}\r\n                        />\r\n                    ) : (\r\n                        <div className={styles.noImage}>No Image</div>\r\n                    )}\r\n                    </div>\r\n\r\n                    <div className={styles.infobox}>\r\n                    <p>{`${castMember.name}`}</p>\r\n                    <p>Character: {`${castMember.character}`}</p>\r\n                    </div>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            {cast.length > visibleActors && (\r\n                <button onClick={loadMoreActors} className={styles.btn}>\r\n                Load More\r\n                </button>\r\n            )}\r\n            </>\r\n        ) : (\r\n            <p>No information about actors available for this movie.</p>\r\n        )}\r\n        </div>\r\n    );\r\n    };\r\n\r\nexport default Cast;"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","visibleActors","setVisibleActors","apiUrl","concat","useEffect","fetchMovieCredits","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","sent","json","console","error","t0","stop","apply","arguments","_jsx","className","styles","children","length","_jsxs","_Fragment","slice","map","castMember","profile_path","src","alt","name","character","id","onClick","prevVisibleActors"],"sourceRoot":""}