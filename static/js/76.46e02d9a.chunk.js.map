{"version":3,"file":"static/js/76.46e02d9a.chunk.js","mappings":"kOACA,GAAgB,KAAO,mBAAmB,SAAW,uBAAuB,SAAW,uBAAuB,QAAU,sBAAsB,MAAQ,oBAAoB,YAAc,0BAA0B,IAAM,mB,SCqExN,EAnEa,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACZC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0CL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAM,sCAAAC,OAAyCZ,EAAO,qBAAAY,OAD7C,qCAGfC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKC,MAAMb,GAAQ,KAAD,EAAtB,OAARQ,EAAQE,EAAAI,KAAAJ,EAAAE,KAAA,EACKJ,EAASO,OAAO,KAAD,GAA5BN,EAAIC,EAAAI,MAEDpB,KACLC,EAAQc,EAAKf,MAEbsB,QAAQC,MAAM,sBAAuBR,GACxCC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEDM,QAAQC,MAAM,gCAA+BP,EAAAQ,IAAS,yBAAAR,EAAAS,OAAA,GAAAZ,EAAA,mBAE7D,kBAbsB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAcvBlB,GACJ,GAAG,CAACH,EAAQX,IAMZ,OACIiC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,KAAYC,SAC3B/B,EAAKgC,OAAS,GACXC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACAH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,SAAgBC,SAC1B/B,EAAKmC,MAAM,EAAG/B,GAAegC,KAAI,SAACC,GAAU,OAC7CJ,EAAAA,EAAAA,MAAA,MAAIJ,UAAWC,EAAAA,SAAgBC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,YAAmBC,SAClCM,EAAWC,cACRV,EAAAA,EAAAA,KAAA,OACAC,UAAWC,EAAAA,MACXS,IAAG,kCAAAhC,OAAoC8B,EAAWC,cAClDE,IAAKH,EAAWI,QAGhBb,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAeC,SAAC,gBAIpCE,EAAAA,EAAAA,MAAA,OAAKJ,UAAWC,EAAAA,QAAeC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,KAAAG,SAAA,GAAAxB,OAAO8B,EAAWI,SAClBR,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,cAAW,GAAAxB,OAAI8B,EAAWK,mBAfIL,EAAWM,GAiB3C,MAGR3C,EAAKgC,OAAS5B,IACXwB,EAAAA,EAAAA,KAAA,UAAQgB,QA/BG,WACnBvC,GAAiB,SAAAwC,GAAiB,OAAIA,EAAoB,CAAC,GAC/D,EA6B6ChB,UAAWC,EAAAA,IAAWC,SAAC,kBAM5DH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,2DAIX,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"castList\":\"Cast_castList__ARoWn\",\"castCard\":\"Cast_castCard__m8Shz\",\"infobox\":\"Cast_infobox__R4BOF\",\"image\":\"Cast_image__mOsuM\",\"placeholder\":\"Cast_placeholder__oyDTA\",\"btn\":\"Cast_btn__Cc2Ok\"};","import React, { useState, useEffect } from \"react\";\nimport styles from './Cast.module.css';\n\nconst Cast = ({ movieId }) => {\n    const [cast, setCast] = useState([]);\n    const [visibleActors, setVisibleActors] = useState(8);\n    const apiKey = '6ec0ba8fa041ffdfd513a6b00a854a64';\n    const apiUrl = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`;\n\n    useEffect(() => {\n        const fetchMovieCredits = async () => {\n            try {\n                const response = await fetch(apiUrl);\n                const data = await response.json();\n\n                if (data.cast) {\n                    setCast(data.cast);\n                } else {\n                    console.error('No cast data found:', data);\n                }\n            } catch (error) {\n                console.error('Error fetching movie credits:', error);\n            }\n        };\n        fetchMovieCredits();\n    }, [apiUrl, movieId]);\n\n    const loadMoreActors = () => {\n        setVisibleActors(prevVisibleActors => prevVisibleActors + 8);\n    };\n\n    return (\n        <div className={styles.cast}>\n        {cast.length > 0 ? (\n            <>\n            <ul className={styles.castList}>\n                {cast.slice(0, visibleActors).map((castMember) => (\n                <li className={styles.castCard} key={castMember.id}>\n                    <div className={styles.placeholder}>\n                    {castMember.profile_path ? (\n                        <img\n                        className={styles.image}\n                        src={`https://image.tmdb.org/t/p/w500${castMember.profile_path}`}\n                        alt={castMember.name}\n                        />\n                    ) : (\n                        <div className={styles.noImage}>No Image</div>\n                    )}\n                    </div>\n\n                    <div className={styles.infobox}>\n                    <p>{`${castMember.name}`}</p>\n                    <p>Character: {`${castMember.character}`}</p>\n                    </div>\n                </li>\n                ))}\n            </ul>\n            {cast.length > visibleActors && (\n                <button onClick={loadMoreActors} className={styles.btn}>\n                Load More\n                </button>\n            )}\n            </>\n        ) : (\n            <p>No information about actors available for this movie.</p>\n        )}\n        </div>\n    );\n    };\n\nexport default Cast;"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","visibleActors","setVisibleActors","apiUrl","concat","useEffect","fetchMovieCredits","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","sent","json","console","error","t0","stop","apply","arguments","_jsx","className","styles","children","length","_jsxs","_Fragment","slice","map","castMember","profile_path","src","alt","name","character","id","onClick","prevVisibleActors"],"sourceRoot":""}