{"version":3,"file":"static/js/73.395ac1a5.chunk.js","mappings":"8LACA,GAAgB,QAAU,sBAAsB,KAAO,mBAAmB,KAAO,oB,0BCgDjF,EA7Ca,WACT,IAAAA,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,EAAW,yDAAAC,OADF,oCAGTC,GAAgBC,EAAAA,EAAAA,cAAY,WAC9BC,MAAMJ,GACDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAACE,GACCA,GAAQA,EAAKC,SAAWC,MAAMC,QAAQH,EAAKC,SAC3CT,EAAUQ,EAAKC,QAAQG,QAAO,SAAAC,GAAK,OAAIA,EAAMC,cAAc,KAE3DC,QAAQC,MAAM,2BAA4BR,EAElD,IACCS,OAAM,SAACD,GACJD,QAAQC,MAAM,+BAAgCA,EAClD,GACR,GAAG,CAACf,IAOJ,OAJAiB,EAAAA,EAAAA,YAAU,WACNf,GACJ,GAAG,CAACA,KAGAgB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAeC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,MAAaC,SAAC,mBAC5BvB,EAAOyB,OAAS,IACbD,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,KAAYC,SACtBvB,EAAO0B,KAAI,SAACZ,GAAK,OACdU,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,KAAYC,SACtBT,EAAMa,QACHH,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACP,UAAWC,EAAAA,KAAaO,GAAI,CAAEC,SAAS,WAAD3B,OAAaW,EAAMiB,IAAMC,MAAO,CAAEC,KAAM,SAAWV,SAC1FT,EAAMa,SAHcb,EAAMiB,GAMlC,QAM7B,C","sources":["webpack://goit-react-hw-05-movies/./src/components/pages/Home/Home.module.css?88c1","components/pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"HomeBox\":\"Home_HomeBox__rWVvI\",\"link\":\"Home_link__89GqQ\",\"item\":\"Home_item__Nns9a\"};","import styles from './Home.module.css';\nimport { useEffect, useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const apiKey = '6ec0ba8fa041ffdfd513a6b00a854a64';\n    const apiUrlTrend = `https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`;\n\n    const getTrendMovie = useCallback(() => {\n        fetch(apiUrlTrend)\n            .then(res => res.json())\n            .then((json) => {\n                if (json && json.results && Array.isArray(json.results)) {\n                    setMovies(json.results.filter(movie => movie.original_title));\n                } else {\n                    console.error('Invalid response format:', json);\n                }\n            })\n            .catch((error) => {\n                console.error('Error fetching trend movies:', error);\n            });\n    }, [apiUrlTrend]);\n\n\n    useEffect(() => {\n        getTrendMovie();\n    }, [getTrendMovie]);\n\n    return (\n        <div className={styles.HomeBox}>\n            <h1 className={styles.title}>Trending today</h1>  \n            {movies.length > 0 && (\n                <ul className={styles.list}>\n                    {movies.map((movie) => (\n                        <li className={styles.item} key={movie.id}>\n                            {movie.title && (\n                                <Link className={styles.link} to={{ pathname: `/movies/${movie.id}`, state: { from: 'home' } }}>\n                                    {movie.title}\n                                </Link>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Home;"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","apiUrlTrend","concat","getTrendMovie","useCallback","fetch","then","res","json","results","Array","isArray","filter","movie","original_title","console","error","catch","useEffect","_jsxs","className","styles","children","_jsx","length","map","title","Link","to","pathname","id","state","from"],"sourceRoot":""}